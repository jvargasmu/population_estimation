Sender: LSF System <lsfadmin@eu-lo-s4-037>
Subject: Job 196660488: <popest> in cluster <euler> Exited

Job <popest> was submitted from host <eu-login-27> by user <metzgern> in cluster <euler> at Mon Dec 13 20:56:17 2021
Job was executed on host(s) <eu-lo-s4-037>, in queue <gpu.24h>, as user <metzgern> in cluster <euler> at Mon Dec 13 21:12:52 2021
</cluster/home/metzgern> was used as the home directory.
</cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation> was used as the working directory.
Started at Mon Dec 13 21:12:52 2021
Terminated at Mon Dec 13 21:22:29 2021
Results reported at Mon Dec 13 21:22:29 2021

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash

#BSUB -W 24:00
##BSUB -n 8
#BSUB -R "rusage[mem=110000,ngpus_excl_p=1]"
#BSUB -R "select[gpu_mtotal0>=5500]"
##BSUB -R "rusage[scratch=12500]"
#BSUB -J "popest"

# job index (set this to your system job variable e.g. for parallel job arrays)
# used to set model_idx and test_fold_idx below.
#index=0   # index=0 --> model_idx=0, test_fold_idx=0
index=$((LSB_JOBINDEX - 1))
val_fold=$(( $index % 5 ))

leave=Clipart

# cp -r /scratch2/Code/stylebias/data/OfficeHome $TMPDIR/
# cp -r /cluster/work/igp_psr/nkalischek/stylebias/data/OfficeHome $TMPDIR/
# cp -r /cluster/work/igp_psr/metzgern/HAC/code/codeJohn main/population_estimation/datasets $TMPDIR/

echo job index: $index
echo leave: $leave
echo val_fold: $val_fold

source HACenv/bin/activate

# load modules
module load gcc/8.2.0 gdal/3.2.0 zlib/1.2.9 eth_proxy hdf5/1.10.1


python superpixel_disagg_model.py   -train uga,rwa,tza,nga,moz,cod \
                                    -train_lvl f,f,f,f,f,c \
                                    -test uga,rwa,tza,nga,moz,cod \
                                    -lr 0.0001 \
                                    -optim adam \
                                    -wr 0.001 \
                                    -adamwr 0. \
                                    -lstep 8000 \
                                    --validation_fold ${val_fold} \
                                    -mm m,m,m,m,m,m \
                                    --loss laplaceNLL \
                                    --custom_sampler_weights 1,1,1 \
                                    --input_scaling True \
                                    --output_scaling True

# python3 train.py --optimizer ADAM \
#                  --scheduler MultiStepLR \
#                  --base_learning_rate 0.00001 \
#                  --max_epochs 400 \

(... more ...)
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   221.27 sec.
    Max Memory :                                 108453 MB
    Average Memory :                             52947.57 MB
    Total Requested Memory :                     110000.00 MB
    Delta Memory :                               1547.00 MB
    Max Swap :                                   -
    Max Processes :                              7
    Max Threads :                                31
    Run time :                                   586 sec.
    Turnaround time :                            1572 sec.

The output (if any) follows:

job index: -1
leave: Clipart
val_fold: -1

The following have been reloaded with a version change:
  1) gdal/3.1.2 => gdal/3.2.0

/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/torch/distributed/distributed_c10d.py:153: UserWarning: torch.distributed.reduce_op is deprecated, please use torch.distributed.ReduceOp instead
  warnings.warn("torch.distributed.reduce_op is deprecated, please use "
wandb: Currently logged in as: mp20 (use `wandb login --relogin` to force relogin)
wandb: Tracking run with wandb version 0.12.2
wandb: Syncing run treasured-pyramid-1100
wandb:  View project at https://wandb.ai/nandometzger/HAC
wandb:  View run at https://wandb.ai/nandometzger/HAC/runs/ttpgm80y
wandb: Run data is saved locally in /cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation/wandb/run-20211213_211400-ttpgm80y
wandb: Run `wandb offline` to turn off syncing.

Preparing dataloader for:  ['uga', 'rwa', 'tza', 'nga', 'moz', 'cod']
0it [00:00, ?it/s]1it [00:30, 30.58s/it]2it [00:35, 15.40s/it]3it [01:25, 31.23s/it]4it [02:41, 48.99s/it]5it [03:59, 59.25s/it]6it [06:28, 89.80s/it]6it [06:28, 64.70s/it]
2021-12-13 21:22:03 INFO     Using no weighted sampler
  0% 0/100 [00:00<?, ?it/s]
  0% 0/14292531 [00:00<?, ?it/s][APreparing uga
Initial: 1142.583296 mb used
After loading of variables 2142.871552 mb used
after loading of features 5006.086144 mb used
final usage 5004.226559999999 mb used
Preparing rwa
Initial: 5004.271616 mb used
After loading of variables 5115.707392 mb used
after loading of features 5509.12 mb used
final usage 5509.12 mb used
Preparing tza
Initial: 5509.12 mb used
After loading of variables 9386.868736 mb used
after loading of features 20428.197888 mb used
final usage 20414.795776 mb used
Preparing nga
Initial: 20414.795776 mb used
After loading of variables 23863.312384 mb used
after loading of features 34354.23744 mb used
final usage 34354.23744 mb used
Preparing moz
Initial: 34354.23744 mb used
After loading of variables 39630.29504 mb used
after loading of features 54965.641215999996 mb used
final usage 54965.641215999996 mb used
Preparing cod
Initial: 54965.641215999996 mb used
After loading of variables 66635.595776 mb used
after loading of features 98486.03852799999 mb used
final usage 98486.03852799999 mb used
Dataloader ready.
using elementwise input scaling
using elementwise output scaling
  0% 0/14292531 [00:01<?, ?it/s]
  0% 0/100 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "superpixel_disagg_model.py", line 530, in <module>
    main()
  File "superpixel_disagg_model.py", line 504, in main
    superpixel_with_pix_data(
  File "superpixel_disagg_model.py", line 373, in superpixel_with_pix_data
    res, log_dict = PixAdminTransform(
  File "/cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation/pix_transform/pix_admin_transform.py", line 456, in PixAdminTransform
    for sample in tqdm(train_loader):
  File "/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/tqdm/std.py", line 1180, in __iter__
    for obj in iterable:
  File "/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/torch/utils/data/dataloader.py", line 561, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation/utils.py", line 519, in __getitem__
    sample.append(self.get_single_training_item(i))
  File "/cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation/utils.py", line 496, in get_single_training_item
    X = torch.tensor(self.features[name][0,:,rmin:rmax, cmin:cmax])
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "/cluster/apps/nss/gcc-8.2.0/python/3.8.5/x86_64/lib64/python3.8/site-packages/h5py/_hl/dataset.py", line 787, in __getitem__
    self.id.read(mspace, fspace, arr, mtype, dxpl=self._dxpl)
  File "h5py/_objects.pyx", line 54, in h5py._objects.with_phil.wrapper
  File "h5py/_objects.pyx", line 55, in h5py._objects.with_phil.wrapper
  File "h5py/h5d.pyx", line 192, in h5py.h5d.DatasetID.read
  File "h5py/_proxy.pyx", line 112, in h5py._proxy.dset_rw
OSError: Can't read data (wrong B-tree signature)
wandb: Waiting for W&B process to finish, PID 11627
wandb: Program failed with code 1.  Press ctrl-c to abort syncing.
wandb: - 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: \ 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: | 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: / 0.00MB of 0.01MB uploaded (0.00MB deduped)wandb: - 0.00MB of 0.01MB uploaded (0.00MB deduped)wandb: \ 0.00MB of 0.01MB uploaded (0.00MB deduped)wandb: | 0.00MB of 0.01MB uploaded (0.00MB deduped)wandb: / 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: - 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: \ 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: | 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: / 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: - 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb: \ 0.01MB of 0.01MB uploaded (0.00MB deduped)wandb:                                                                                
wandb: Find user logs for this run at: /cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation/wandb/run-20211213_211400-ttpgm80y/logs/debug.log
wandb: Find internal logs for this run at: /cluster/work/igp_psr/metzgern/HAC/code/repocode/population_estimation/wandb/run-20211213_211400-ttpgm80y/logs/debug-internal.log
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: 
wandb: Synced treasured-pyramid-1100: https://wandb.ai/nandometzger/HAC/runs/ttpgm80y

